whether.service.implementation.type=cache
server.port=8000

open.weather.url=api.openweathermap.org/data/2.5/weather
open.weather.key=ade12dfc9797a1c5244d352ded327d04

weather.expiration.time.ms= 30000
weather.schedule.update.ms= 20000

#cron jobs:
weather.schedule.cron.ms=0/20 * * * * ?
weather.schedule.cron.clean.cache=0 0 * * * ?

spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:myapp;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;
spring.datasource.password=pass
spring.datasource.name=myapp
spring.datasource.initialization-mode=embedded
spring.data.jpa.repositories.bootstrap-mode=default
spring.jpa.hibernate.ddl-auto=create

spring.flyway.baselineOnMigrate=true
spring.flyway.check-location=true
spring.flyway.locations=classpath:db.migration
spring.flyway.schemas=public
spring.flyway.enabled=true

#kafka confiuration:
kafka.bootstrap.Address=localhost:9092
weather.topic.name=weather

#prometheus
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=prometheus

#management.endpoints.web.exposure.include=metrics,prometheus
#management.endpoint.metrics.enabled=true
#management.endpoint.prometheus.enabled=true
#management.metrics.export.prometheus.enabled=true







